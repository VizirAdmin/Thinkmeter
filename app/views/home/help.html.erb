<script type="text/javascript" src="js/jquery-1.3.1.min.js"></script>


<div id="actual_path">
  /<%=link_to "home", root_path%>
  /<%=link_to "help", "/home/help"%>
</div>

<div id="container"style="width:98%">
  <div class="title">How it works ?</div>
    <div id="gallery">
      <%(1..11).each do |i|%>
	      <a href="#" class="show">
		      <img src="/images/ithink/imag<%=i%>.jpg" alt="" width="580" height="360" title="" alt="" rel=""/>
	      </a>
      <%end%>
    </div>
    <div class="clear"></div>

  <div class="content">
    <p>Most of people express your opinions about something or somebody.</p>
    <p>This opinion may be viewed and retweet by all followers of this person.</p>
    <p>It is difficult to know if only you are alone complaining about it, you will have to dig and search for some opinion. That's where the Thinkmeter comes to help!</p>
    <p>You continue to tweet as you always have done  before. But you will put a hash tag, telling to ThinkMeter to consider this Tweet. You will tweet something like this:</p>
    <p style="margin-left:20px"> 
      <b>#IThink</b> Apple fantastic. I really like the IPAD.
      <br>
      <b>#IThink</b> Android #rocks. Depending on the telephone, is better than IPhone.
    </p>
    <p>
      If possible, we prefer that you use the following syntax:
    </p>
    <p>
      <b>#IThink</b> <i>[name-of-what-you-are-evaluating]</i> <i>[what-you-think-about-it]</I>. Complement with  your opinion.</i>
    </p>
      We are improving this syntax to put more options.
    <p>
      <b>
        Don't let your opinion alone, put it together at ThinkMeter. 
      </b>
    </p>
  </div>
  <div class="clearfix"></div>
</div>



<script type="text/javascript">

jQuery(document).ready(function() {		
	
	//Execute the slideShow
	slideShow();

});

function slideShow() {

	//Set the opacity of all images to 0
	jQuery('#gallery a').css({opacity: 0.0});
	
	//Get the first image and display it (set it to full opacity)
	jQuery('#gallery a:first').css({opacity: 1.0});
	
	//Set the caption background to semi-transparent
	jQuery('#gallery .caption').css({opacity: 0.7});

	//Resize the width of the caption according to the image width
	jQuery('#gallery .caption').css({width: jQuery('#gallery a').find('img').css('width')});
	
	//Get the caption of the first image from REL attribute and display it
	jQuery('#gallery .content').html(jQuery('#gallery a:first').find('img').attr('rel'))
	.animate({opacity: 0.7}, 400);
	
	//Call the gallery function to run the slideshow, 6000 = change to next image after 6 seconds
	setInterval('gallery()',6000);
	
}

function gallery() {
	
	//if no IMGs have the show class, grab the first image
	var current = (jQuery('#gallery a.show')?  jQuery('#gallery a.show') : jQuery('#gallery a:first'));

	//Get next image, if it reached the end of the slideshow, rotate it back to the first image
	var next = ((current.next().length) ? ((current.next().hasClass('caption'))? jQuery('#gallery a:first') :current.next()) : jQuery('#gallery a:first'));	
	
	//Get next image caption
	var caption = next.find('img').attr('rel');	
	
	//Set the fade in effect for the next image, show class has higher z-index
	next.css({opacity: 0.0})
	.addClass('show')
	.animate({opacity: 1.0}, 1000);

	//Hide the current image
	current.animate({opacity: 0.0}, 1000)
	.removeClass('show');
	
	//Set the opacity to 0 and height to 1px
	jQuery('#gallery .caption').animate({opacity: 0.0}, { queue:false, duration:0 }).animate({height: '1px'}, { queue:true, duration:300 });	
	
	//Animate the caption, opacity to 0.7 and heigth to 100px, a slide up effect
	jQuery('#gallery .caption').animate({opacity: 0.7},100 ).animate({height: '100px'},500 );
	
	//Display the content
	jQuery('#gallery .content').html(caption);
	
	
}

</script>
